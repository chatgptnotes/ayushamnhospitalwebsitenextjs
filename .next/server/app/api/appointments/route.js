"use strict";(()=>{var e={};e.id=282,e.ids=[282],e.modules={1185:e=>{e.exports=require("mongoose")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},1501:(e,t,n)=>{n.r(t),n.d(t,{originalPathname:()=>f,patchFetch:()=>x,requestAsyncStorage:()=>d,routeModule:()=>m,serverHooks:()=>h,staticGenerationAsyncStorage:()=>g});var r={};n.r(r),n.d(r,{GET:()=>l,POST:()=>c});var o=n(9303),a=n(8716),s=n(670),i=n(7070),p=n(2021),u=n(6040);async function c(e){try{await (0,p.Z)();let t=await e.json();if(!t.name||!t.phone)return i.NextResponse.json({success:!1,error:"Name and phone are required"},{status:400});let n=t.phone.replace(/[\s-]/g,""),r=await u.Z.create({...t,phone:n,timestamp:new Date,status:"pending"});return console.log("Appointment created:",r),i.NextResponse.json({success:!0,data:r})}catch(e){return console.error("Error creating appointment:",e),i.NextResponse.json({success:!1,error:"Failed to create appointment"},{status:500})}}async function l(e){try{await (0,p.Z)();let{searchParams:t}=new URL(e.url),n=t.get("search")||"",r=t.get("status")||"all",o={};n&&(o.$or=[{name:{$regex:n,$options:"i"}},{phone:{$regex:n,$options:"i"}},{email:{$regex:n,$options:"i"}}]),"all"!==r&&(o.status=r);let a=await u.Z.find(o).sort({timestamp:-1}).limit(50);return i.NextResponse.json({success:!0,data:a})}catch(e){return console.error("Error fetching appointments:",e),i.NextResponse.json({success:!1,error:"Failed to fetch appointments"},{status:500})}}let m=new o.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/appointments/route",pathname:"/api/appointments",filename:"route",bundlePath:"app/api/appointments/route"},resolvedPagePath:"C:\\Users\\DELL\\Desktop\\project\\ayushamnhospitalwebsitenextjs\\app\\api\\appointments\\route.ts",nextConfigOutput:"standalone",userland:r}),{requestAsyncStorage:d,staticGenerationAsyncStorage:g,serverHooks:h}=m,f="/api/appointments/route";function x(){return(0,s.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:g})}},2021:(e,t,n)=>{n.d(t,{Z:()=>i});var r=n(1185),o=n.n(r);let a="mongodb+srv://chatgptnotes:64SMNPCaginm5gaf@cluster0.phaz6c2.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0";if(!a)throw Error("Please define the MONGODB_URI environment variable inside .env.local");let s=global.mongoose||{conn:null,promise:null};global.mongoose||(global.mongoose=s);let i=async function(){if(s.conn)return s.conn;s.promise||(s.promise=o().connect(a,{bufferCommands:!1}).then(e=>(console.log("Connected to MongoDB Atlas"),e)).catch(e=>{throw console.error("MongoDB connection error:",e),e}));try{s.conn=await s.promise}catch(e){throw s.promise=null,e}return s.conn}},6040:(e,t,n)=>{n.d(t,{Z:()=>s});var r=n(1185),o=n.n(r);let a=new(o()).Schema({name:{type:String,required:[!0,"Name is required"]},phone:{type:String,required:[!0,"Phone number is required"]},email:{type:String,required:!1},treatment:{type:String,required:!1},message:{type:String,required:!1},status:{type:String,enum:["pending","completed","cancelled"],default:"pending"},timestamp:{type:Date,default:Date.now}}),s=o().models.Appointment||o().model("Appointment",a)}};var t=require("../../../webpack-runtime.js");t.C(e);var n=e=>t(t.s=e),r=t.X(0,[948,972],()=>n(1501));module.exports=r})();